{
    "swagger": "2.0",
    "info": {
        "description": "\u003cb\u003eThis is the ZG Data Guard API.\u003c/b\u003e \u003cbr /\u003e\nZG Data Guard is a centralized tool designed to streamline and secure the management of multiple databases across various environments.\nIt simplifies administration by providing a unified platform to handle database ecosystems, technologies, instances, predefined roles,\ndatabases, users, and access control. All secured through JWT-protected API. \u003cbr /\u003e\u003cbr /\u003eEnjoy :D",
        "title": "ZG Data Guard API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Luiz Henrique F. da Silva",
            "email": "luizhenrique@zgsolucoes.com.br"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/access-permission/grant": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Grant connection access to a set of users to a set of instances and their respective databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Permission"
                ],
                "summary": "Grant connection access to a set of users to a set of instances and their respective databases",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GrantAccessInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GrantAccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/access-permission/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing access permission logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Permission"
                ],
                "summary": "List all existing access permission logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListAccessPermissionLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/access-permission/revoke": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "If no instance is provided, it revokes access from all instances accessible by the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Permission"
                ],
                "summary": "Revoke connection access to a specific user from a set of instances and their respective databases",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RevokeAccessInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.RevokeAccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/access-permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing access permissions established between users and databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Permission"
                ],
                "summary": "List all existing access permissions established between users and databases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID",
                        "name": "databaseId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Database User ID",
                        "name": "databaseUserId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Database Instance ID",
                        "name": "databaseInstanceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListAccessPermissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an existing database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Get a database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetDatabaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an existing database instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Get a database instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database Instance ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetDatabaseInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing database instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Update a database instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database Instance ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseInstanceInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDatabaseInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new database instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Create a database instance",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseInstanceInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDatabaseInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance/change-status": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change the status of a database instance (cluster), enabling or disabling it. If disabled, it removes all access permissions from all database users that have access to the instance. It also deactivates all databases from the instance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Change the status of a database instance (cluster), enabling or disabling it. If disabled, it removes all access permissions from all database users that have access to the instance. It also deactivates all databases from the instance.",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeStatusInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ChangeStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance/credentials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get credentials of an existing database instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Get credentials of a specific database instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database Instance ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetDatabaseInstanceCredentialsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance/propagate-roles": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Propagates all database role records to the selected database instances, if instances ids are not provided, propagate to all enabled instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Propagates all database role records to the selected database instances, if instances ids are not provided, propagate to all enabled instances",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.PropagateRolesInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.PropagateRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance/sync-databases": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sync databases from selected database instances, if instances ids are not provided, sync all enabled instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Sync databases from selected database instances, if instances ids are not provided, sync all enabled instances",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.SyncDatabasesInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SyncDatabasesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instance/test-connection": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Test connection with the selected database instances, if instances ids are not provided, test connection with all enabled instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "Test connection with the selected database instances, if instances ids are not provided, test connection with all enabled instances",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.TestConnectionInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TestConnectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-instances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing database instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Instance"
                ],
                "summary": "List all existing database instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ecosystem ID",
                        "name": "ecosystemId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Database Technology ID",
                        "name": "technologyId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only Enabled Database Instances",
                        "name": "onlyEnabled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListDatabaseInstancesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing database roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database Role"
                ],
                "summary": "List all existing database roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListDatabaseRolesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an existing database user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "Get a database user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetDatabaseUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing database user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "Update a database user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDatabaseUserInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDatabaseUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new database user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "Create a database user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatabaseUserInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDatabaseUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-user/change-status": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change the status of a database user, enabling or disabling it. If disabled, it revokes access from all instances accessible by the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "Change the status of a database user, enabling or disabling it. If disabled, it revokes access from all instances accessible by the user.",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeStatusInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ChangeStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-user/credentials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get credentials of an existing database user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "Get credentials of a specific database user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetDatabaseUserCredentialsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database-users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing database users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database User"
                ],
                "summary": "List all existing database users",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Only Enabled Users",
                        "name": "onlyEnabled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListDatabaseUsersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/database/setup-roles": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Setup roles (applying grants) in the selected databases, if databases ids are not provided, setup roles in all enabled databases belonging to the enabled instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "Setup roles (applying grants) in the selected databases, if databases ids are not provided, setup roles in all enabled databases belonging to the enabled instances",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.SetupRolesInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SetupRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/databases": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing databases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Database"
                ],
                "summary": "List all existing databases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ecosystem ID",
                        "name": "ecosystemId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Database Instance ID",
                        "name": "databaseInstanceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListDatabasesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ecosystem": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an existing ecosystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ecosystem"
                ],
                "summary": "Get an ecosystem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ecosystem ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetEcosystemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing ecosystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ecosystem"
                ],
                "summary": "Update an ecosystem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ecosystem ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EcosystemInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateEcosystemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new ecosystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ecosystem"
                ],
                "summary": "Create an ecosystem",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EcosystemInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateEcosystemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing ecosystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ecosystem"
                ],
                "summary": "Delete an ecosystem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ecosystem ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteEcosystemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ecosystems": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing ecosystems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ecosystem"
                ],
                "summary": "List all existing ecosystems",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListEcosystemsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/technologies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all existing technologies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technology"
                ],
                "summary": "List all existing technologies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListTechnologiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/technology": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an existing technology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technology"
                ],
                "summary": "Get a technology",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Technology ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetTechnologyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing technology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technology"
                ],
                "summary": "Update a technology",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Technology ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TechnologyInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateTechnologyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new technology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technology"
                ],
                "summary": "Create a technology",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TechnologyInputDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateTechnologyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an existing technology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technology"
                ],
                "summary": "Delete a technology",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Technology ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteTechnologyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccessPermissionLogOutputDTO": {
            "type": "object",
            "properties": {
                "databaseId": {
                    "type": "string"
                },
                "databaseInstanceId": {
                    "type": "string"
                },
                "databaseInstanceName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databaseUserEmail": {
                    "type": "string"
                },
                "databaseUserId": {
                    "type": "string"
                },
                "databaseUserName": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "operationUserId": {
                    "type": "string"
                },
                "operationUserName": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.AccessPermissionOutputDTO": {
            "type": "object",
            "properties": {
                "databaseId": {
                    "type": "string"
                },
                "databaseInstanceId": {
                    "type": "string"
                },
                "databaseInstanceName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "databaseRoleId": {
                    "type": "string"
                },
                "databaseRoleName": {
                    "type": "string"
                },
                "databaseUserEmail": {
                    "type": "string"
                },
                "databaseUserId": {
                    "type": "string"
                },
                "databaseUserName": {
                    "type": "string"
                },
                "ecosystemId": {
                    "type": "string"
                },
                "ecosystemName": {
                    "type": "string"
                },
                "grantedAt": {
                    "type": "string"
                },
                "grantedByUserId": {
                    "type": "string"
                },
                "grantedByUserName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.ChangeStatusInputDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.ChangeStatusOutputDTO": {
            "type": "object",
            "properties": {
                "disabledAt": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseInstanceCredentialsOutputDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseInstanceInputDTO": {
            "type": "object",
            "properties": {
                "adminPassword": {
                    "type": "string"
                },
                "adminUser": {
                    "type": "string"
                },
                "databaseTechnologyId": {
                    "type": "string"
                },
                "ecosystemId": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "hostConnection": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "portConnection": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseInstanceOutputDTO": {
            "type": "object",
            "properties": {
                "adminPassword": {
                    "type": "string"
                },
                "adminUser": {
                    "type": "string"
                },
                "connectionStatus": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdByUser": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "databaseTechnologyId": {
                    "type": "string"
                },
                "databaseTechnologyName": {
                    "type": "string"
                },
                "databaseTechnologyVersion": {
                    "type": "string"
                },
                "disabledAt": {
                    "type": "string"
                },
                "ecosystemId": {
                    "type": "string"
                },
                "ecosystemName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "hostConnection": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastConnectionResult": {
                    "type": "string"
                },
                "lastConnectionTest": {
                    "type": "string"
                },
                "lastDatabaseSync": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "portConnection": {
                    "type": "string"
                },
                "rolesCreated": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseOutputDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdByUser": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "currentSize": {
                    "type": "string"
                },
                "databaseInstanceId": {
                    "type": "string"
                },
                "databaseInstanceName": {
                    "type": "string"
                },
                "databaseTechnologyId": {
                    "type": "string"
                },
                "databaseTechnologyName": {
                    "type": "string"
                },
                "databaseTechnologyVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disabledAt": {
                    "type": "string"
                },
                "ecosystemId": {
                    "type": "string"
                },
                "ecosystemName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "lastDatabaseSync": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rolesConfigured": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseRoleOutputDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                }
            }
        },
        "dto.DatabaseUserCredentialsOutputDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseUserInputDTO": {
            "type": "object",
            "properties": {
                "databaseRoleId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                }
            }
        },
        "dto.DatabaseUserOutputDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdByUser": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "databaseRoleDisplayName": {
                    "type": "string"
                },
                "databaseRoleId": {
                    "type": "string"
                },
                "databaseRoleName": {
                    "type": "string"
                },
                "disabledAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.EcosystemInputDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "dto.EcosystemOutputDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdByUser": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.GrantAccessInputDTO": {
            "type": "object",
            "properties": {
                "databaseUsersIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instancesData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.InstanceDataDTO"
                    }
                }
            }
        },
        "dto.GrantAccessOutputDTO": {
            "type": "object",
            "properties": {
                "hasErrors": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.InstanceDataDTO": {
            "type": "object",
            "properties": {
                "databaseInstanceId": {
                    "type": "string"
                },
                "databasesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.PropagateRolesInputDTO": {
            "type": "object",
            "properties": {
                "databaseInstancesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.PropagateRolesOutputDTO": {
            "type": "object",
            "properties": {
                "databaseInstanceId": {
                    "type": "string"
                },
                "ecosystem": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "technology": {
                    "type": "string"
                }
            }
        },
        "dto.RevokeAccessInputDTO": {
            "type": "object",
            "properties": {
                "databaseInstancesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "databaseUserId": {
                    "type": "string"
                }
            }
        },
        "dto.RevokeAccessOutputDTO": {
            "type": "object",
            "properties": {
                "hasErrors": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.SetupRolesInputDTO": {
            "type": "object",
            "properties": {
                "databaseInstanceId": {
                    "type": "string"
                },
                "databasesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SetupRolesOutputDTO": {
            "type": "object",
            "properties": {
                "databaseId": {
                    "type": "string"
                },
                "databaseInstanceId": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "ecosystem": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "technology": {
                    "type": "string"
                }
            }
        },
        "dto.SyncDatabasesInputDTO": {
            "type": "object",
            "properties": {
                "databaseInstancesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SyncDatabasesOutputDTO": {
            "type": "object",
            "properties": {
                "databaseInstanceId": {
                    "type": "string"
                },
                "ecosystem": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "technology": {
                    "type": "string"
                },
                "totalDatabases": {
                    "type": "integer"
                }
            }
        },
        "dto.TechnologyInputDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.TechnologyOutputDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdByUser": {
                    "type": "string"
                },
                "createdByUserId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.TestConnectionInputDTO": {
            "type": "object",
            "properties": {
                "databaseInstancesIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.TestConnectionOutputDTO": {
            "type": "object",
            "properties": {
                "databaseInstanceId": {
                    "type": "string"
                },
                "ecosystem": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "technology": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDatabaseUserInputDTO": {
            "type": "object",
            "properties": {
                "databaseRoleId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                }
            }
        },
        "handler.ChangeStatusResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ChangeStatusOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDatabaseInstanceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseInstanceOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDatabaseUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseUserOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.CreateEcosystemResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.EcosystemOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.CreateTechnologyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.TechnologyOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteEcosystemResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteTechnologyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetDatabaseInstanceCredentialsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseInstanceCredentialsOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetDatabaseInstanceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseInstanceOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetDatabaseResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetDatabaseUserCredentialsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseUserCredentialsOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetDatabaseUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.DatabaseUserOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetEcosystemResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.EcosystemOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GetTechnologyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.TechnologyOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.GrantAccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.GrantAccessOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ListAccessPermissionLogsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccessPermissionLogOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListAccessPermissionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccessPermissionOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListDatabaseInstancesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatabaseInstanceOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListDatabaseRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatabaseRoleOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListDatabaseUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatabaseUserOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListDatabasesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatabaseOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListEcosystemsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EcosystemOutputDTO"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ListTechnologiesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TechnologyOutputDTO"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.PropagateRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PropagateRolesOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.RevokeAccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.RevokeAccessOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.SetupRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SetupRolesOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.SyncDatabasesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SyncDatabasesOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.TestConnectionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TestConnectionOutputDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateEcosystemResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.EcosystemOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateTechnologyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.TechnologyOutputDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "It represents the ecosystem where the database instance (cluster) is running. e.g. AWS, Cloud XPTO, On-premises, etc.",
            "name": "Ecosystem"
        },
        {
            "description": "It represents the database technology. e.g. PostgreSQL 13, PostgreSQL 16, MySQL 5, etc.",
            "name": "Technology"
        },
        {
            "description": "It represents the database instance (cluster) that is running in a specific ecosystem.",
            "name": "Database Instance"
        },
        {
            "description": "It represents the database that is running in a specific database instance. e.g. zg-data-guard, users-service, foo-service, etc.",
            "name": "Database"
        },
        {
            "description": "It represents the role that can be assigned to a user in a specific database. Each role has specific permissions. e.g. user_ro, developer, devops, etc.",
            "name": "Database Role"
        },
        {
            "description": "It represents the user that can be created in a specific database instance (cluster) with a specific role. e.g. foo.bar, john.doe, etc.",
            "name": "Database User"
        },
        {
            "description": "It represents the permission that can be granted to a user to connect in a specific database. e.g. foo.bar (user) can connect in zg-data-guard (database) with developer role.",
            "name": "Access Permission"
        }
    ]
}